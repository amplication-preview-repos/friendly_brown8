/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  Dream as PrismaDream,
  Tag as PrismaTag,
  User as PrismaUser,
} from "@prisma/client";
import { DreamCreateInput } from "./DreamCreateInput";
import { Dream } from "./Dream";
import { DreamWhereInput } from "./DreamWhereInput";

export class DreamServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.DreamCountArgs, "select">): Promise<number> {
    return this.prisma.dream.count(args);
  }

  async dreams(args: Prisma.DreamFindManyArgs): Promise<PrismaDream[]> {
    return this.prisma.dream.findMany(args);
  }
  async dream(args: Prisma.DreamFindUniqueArgs): Promise<PrismaDream | null> {
    return this.prisma.dream.findUnique(args);
  }
  async createDream(args: Prisma.DreamCreateArgs): Promise<PrismaDream> {
    return this.prisma.dream.create(args);
  }
  async updateDream(args: Prisma.DreamUpdateArgs): Promise<PrismaDream> {
    return this.prisma.dream.update(args);
  }
  async deleteDream(args: Prisma.DreamDeleteArgs): Promise<PrismaDream> {
    return this.prisma.dream.delete(args);
  }

  async findTags(
    parentId: string,
    args: Prisma.TagFindManyArgs
  ): Promise<PrismaTag[]> {
    return this.prisma.dream
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .tags(args);
  }

  async getUser(parentId: string): Promise<PrismaUser | null> {
    return this.prisma.dream
      .findUnique({
        where: { id: parentId },
      })
      .user();
  }
  async CreateDreamWithApi(args: DreamCreateInput): Promise<Dream> {
    throw new Error("Not implemented");
  }
  async GetDreamsList(args: DreamWhereInput): Promise<Dream[]> {
    throw new Error("Not implemented");
  }
}
