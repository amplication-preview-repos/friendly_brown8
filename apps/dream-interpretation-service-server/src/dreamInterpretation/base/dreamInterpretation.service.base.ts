/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  DreamInterpretation as PrismaDreamInterpretation,
  DreamRequest as PrismaDreamRequest,
} from "@prisma/client";

export class DreamInterpretationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DreamInterpretationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.dreamInterpretation.count(args);
  }

  async dreamInterpretations(
    args: Prisma.DreamInterpretationFindManyArgs
  ): Promise<PrismaDreamInterpretation[]> {
    return this.prisma.dreamInterpretation.findMany(args);
  }
  async dreamInterpretation(
    args: Prisma.DreamInterpretationFindUniqueArgs
  ): Promise<PrismaDreamInterpretation | null> {
    return this.prisma.dreamInterpretation.findUnique(args);
  }
  async createDreamInterpretation(
    args: Prisma.DreamInterpretationCreateArgs
  ): Promise<PrismaDreamInterpretation> {
    return this.prisma.dreamInterpretation.create(args);
  }
  async updateDreamInterpretation(
    args: Prisma.DreamInterpretationUpdateArgs
  ): Promise<PrismaDreamInterpretation> {
    return this.prisma.dreamInterpretation.update(args);
  }
  async deleteDreamInterpretation(
    args: Prisma.DreamInterpretationDeleteArgs
  ): Promise<PrismaDreamInterpretation> {
    return this.prisma.dreamInterpretation.delete(args);
  }

  async getDreamRequest(parentId: string): Promise<PrismaDreamRequest | null> {
    return this.prisma.dreamInterpretation
      .findUnique({
        where: { id: parentId },
      })
      .dreamRequest();
  }
}
